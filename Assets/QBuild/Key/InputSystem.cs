//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.1
//     from Assets/QBuild/Key/InputSystem.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace QBuild
{
    public partial class @InputSystem: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputSystem()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystem"",
    ""maps"": [
        {
            ""name"": ""InGame"",
            ""id"": ""b1a074f7-cf3c-4c45-9b06-fff4f65a9f73"",
            ""actions"": [
                {
                    ""name"": ""BlockMove"",
                    ""type"": ""Value"",
                    ""id"": ""2197e7fe-cd57-4966-ac38-da8ddbe05303"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BlockDone"",
                    ""type"": ""Button"",
                    ""id"": ""db3c1581-1106-4f76-bf1f-3e8a5968c551"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayerMove"",
                    ""type"": ""Value"",
                    ""id"": ""d3969a38-698f-4c99-adee-194f52e4ab88"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraMove"",
                    ""type"": ""Value"",
                    ""id"": ""e0ee1f94-7098-49b0-9153-59ef1ed138d4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BlockPlaceF"",
                    ""type"": ""Button"",
                    ""id"": ""e6d2c6de-2cfb-4dc6-b64b-2c39e0044e4d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlockPlaceR"",
                    ""type"": ""Button"",
                    ""id"": ""db426631-5dfe-40f3-b02f-f30ae7958793"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlockPlaceB"",
                    ""type"": ""Button"",
                    ""id"": ""40501032-3505-482a-af39-b22300af129e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlockPlaceL"",
                    ""type"": ""Button"",
                    ""id"": ""99f28559-d7ec-4672-864a-1f465d031617"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectChange"",
                    ""type"": ""Button"",
                    ""id"": ""e844b964-93a1-49e5-b120-3eea3672184e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""AWSD"",
                    ""id"": ""48f4e338-b756-4992-8b51-593f792a0af4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0e4af36b-390d-4292-9df9-708943cf3cd1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4dfd0f59-e5e7-4333-aa9b-64de00c0fefd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f9f9df87-1b44-4618-a7a2-033f0a33180b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""45ffcb8d-3c00-44f7-8588-2c2850ad3183"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""AWSD"",
                    ""id"": ""952b13e3-ecdc-43fc-8407-67f299561be0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""297da6d3-15dc-4ae2-9fd0-48366c4e3d4b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d857a8af-46af-43ec-ba22-7c4c22180d24"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c54a8a0e-eecf-4012-8eae-0aa16ae36c7e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4b364bd3-5240-47f4-a5de-0471625c05ab"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayerMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""8fa4db13-fc24-46b9-ae09-6e31f448d311"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""09296c1f-dfb5-4b5a-9182-29b63783a518"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ceea0950-a640-4e57-89ad-50b025be77f5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8ab72f64-aa79-4e9f-93c1-59d22f59b010"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockDone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d1fe3f5-e7f9-4495-8666-8dc05116fb03"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockPlaceF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c14ae3b-66cc-4b73-b60d-8f2f50a66bbd"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockPlaceR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a1f5b69-13a5-4d70-b36c-e769a7c2d3bf"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockPlaceB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c96d52e-e78d-4077-8097-62ba17cc669c"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BlockPlaceL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""HolderMove"",
                    ""id"": ""d5894c89-eaae-4306-927d-fd4ec3ff32b7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectChange"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""750655bc-8aac-44e3-946b-e516f6ae244c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""0af973f6-b633-4e0d-abe2-4caec30b4897"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // InGame
            m_InGame = asset.FindActionMap("InGame", throwIfNotFound: true);
            m_InGame_BlockMove = m_InGame.FindAction("BlockMove", throwIfNotFound: true);
            m_InGame_BlockDone = m_InGame.FindAction("BlockDone", throwIfNotFound: true);
            m_InGame_PlayerMove = m_InGame.FindAction("PlayerMove", throwIfNotFound: true);
            m_InGame_CameraMove = m_InGame.FindAction("CameraMove", throwIfNotFound: true);
            m_InGame_BlockPlaceF = m_InGame.FindAction("BlockPlaceF", throwIfNotFound: true);
            m_InGame_BlockPlaceR = m_InGame.FindAction("BlockPlaceR", throwIfNotFound: true);
            m_InGame_BlockPlaceB = m_InGame.FindAction("BlockPlaceB", throwIfNotFound: true);
            m_InGame_BlockPlaceL = m_InGame.FindAction("BlockPlaceL", throwIfNotFound: true);
            m_InGame_SelectChange = m_InGame.FindAction("SelectChange", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // InGame
        private readonly InputActionMap m_InGame;
        private List<IInGameActions> m_InGameActionsCallbackInterfaces = new List<IInGameActions>();
        private readonly InputAction m_InGame_BlockMove;
        private readonly InputAction m_InGame_BlockDone;
        private readonly InputAction m_InGame_PlayerMove;
        private readonly InputAction m_InGame_CameraMove;
        private readonly InputAction m_InGame_BlockPlaceF;
        private readonly InputAction m_InGame_BlockPlaceR;
        private readonly InputAction m_InGame_BlockPlaceB;
        private readonly InputAction m_InGame_BlockPlaceL;
        private readonly InputAction m_InGame_SelectChange;
        public struct InGameActions
        {
            private @InputSystem m_Wrapper;
            public InGameActions(@InputSystem wrapper) { m_Wrapper = wrapper; }
            public InputAction @BlockMove => m_Wrapper.m_InGame_BlockMove;
            public InputAction @BlockDone => m_Wrapper.m_InGame_BlockDone;
            public InputAction @PlayerMove => m_Wrapper.m_InGame_PlayerMove;
            public InputAction @CameraMove => m_Wrapper.m_InGame_CameraMove;
            public InputAction @BlockPlaceF => m_Wrapper.m_InGame_BlockPlaceF;
            public InputAction @BlockPlaceR => m_Wrapper.m_InGame_BlockPlaceR;
            public InputAction @BlockPlaceB => m_Wrapper.m_InGame_BlockPlaceB;
            public InputAction @BlockPlaceL => m_Wrapper.m_InGame_BlockPlaceL;
            public InputAction @SelectChange => m_Wrapper.m_InGame_SelectChange;
            public InputActionMap Get() { return m_Wrapper.m_InGame; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
            public void AddCallbacks(IInGameActions instance)
            {
                if (instance == null || m_Wrapper.m_InGameActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_InGameActionsCallbackInterfaces.Add(instance);
                @BlockMove.started += instance.OnBlockMove;
                @BlockMove.performed += instance.OnBlockMove;
                @BlockMove.canceled += instance.OnBlockMove;
                @BlockDone.started += instance.OnBlockDone;
                @BlockDone.performed += instance.OnBlockDone;
                @BlockDone.canceled += instance.OnBlockDone;
                @PlayerMove.started += instance.OnPlayerMove;
                @PlayerMove.performed += instance.OnPlayerMove;
                @PlayerMove.canceled += instance.OnPlayerMove;
                @CameraMove.started += instance.OnCameraMove;
                @CameraMove.performed += instance.OnCameraMove;
                @CameraMove.canceled += instance.OnCameraMove;
                @BlockPlaceF.started += instance.OnBlockPlaceF;
                @BlockPlaceF.performed += instance.OnBlockPlaceF;
                @BlockPlaceF.canceled += instance.OnBlockPlaceF;
                @BlockPlaceR.started += instance.OnBlockPlaceR;
                @BlockPlaceR.performed += instance.OnBlockPlaceR;
                @BlockPlaceR.canceled += instance.OnBlockPlaceR;
                @BlockPlaceB.started += instance.OnBlockPlaceB;
                @BlockPlaceB.performed += instance.OnBlockPlaceB;
                @BlockPlaceB.canceled += instance.OnBlockPlaceB;
                @BlockPlaceL.started += instance.OnBlockPlaceL;
                @BlockPlaceL.performed += instance.OnBlockPlaceL;
                @BlockPlaceL.canceled += instance.OnBlockPlaceL;
                @SelectChange.started += instance.OnSelectChange;
                @SelectChange.performed += instance.OnSelectChange;
                @SelectChange.canceled += instance.OnSelectChange;
            }

            private void UnregisterCallbacks(IInGameActions instance)
            {
                @BlockMove.started -= instance.OnBlockMove;
                @BlockMove.performed -= instance.OnBlockMove;
                @BlockMove.canceled -= instance.OnBlockMove;
                @BlockDone.started -= instance.OnBlockDone;
                @BlockDone.performed -= instance.OnBlockDone;
                @BlockDone.canceled -= instance.OnBlockDone;
                @PlayerMove.started -= instance.OnPlayerMove;
                @PlayerMove.performed -= instance.OnPlayerMove;
                @PlayerMove.canceled -= instance.OnPlayerMove;
                @CameraMove.started -= instance.OnCameraMove;
                @CameraMove.performed -= instance.OnCameraMove;
                @CameraMove.canceled -= instance.OnCameraMove;
                @BlockPlaceF.started -= instance.OnBlockPlaceF;
                @BlockPlaceF.performed -= instance.OnBlockPlaceF;
                @BlockPlaceF.canceled -= instance.OnBlockPlaceF;
                @BlockPlaceR.started -= instance.OnBlockPlaceR;
                @BlockPlaceR.performed -= instance.OnBlockPlaceR;
                @BlockPlaceR.canceled -= instance.OnBlockPlaceR;
                @BlockPlaceB.started -= instance.OnBlockPlaceB;
                @BlockPlaceB.performed -= instance.OnBlockPlaceB;
                @BlockPlaceB.canceled -= instance.OnBlockPlaceB;
                @BlockPlaceL.started -= instance.OnBlockPlaceL;
                @BlockPlaceL.performed -= instance.OnBlockPlaceL;
                @BlockPlaceL.canceled -= instance.OnBlockPlaceL;
                @SelectChange.started -= instance.OnSelectChange;
                @SelectChange.performed -= instance.OnSelectChange;
                @SelectChange.canceled -= instance.OnSelectChange;
            }

            public void RemoveCallbacks(IInGameActions instance)
            {
                if (m_Wrapper.m_InGameActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IInGameActions instance)
            {
                foreach (var item in m_Wrapper.m_InGameActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_InGameActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public InGameActions @InGame => new InGameActions(this);
        public interface IInGameActions
        {
            void OnBlockMove(InputAction.CallbackContext context);
            void OnBlockDone(InputAction.CallbackContext context);
            void OnPlayerMove(InputAction.CallbackContext context);
            void OnCameraMove(InputAction.CallbackContext context);
            void OnBlockPlaceF(InputAction.CallbackContext context);
            void OnBlockPlaceR(InputAction.CallbackContext context);
            void OnBlockPlaceB(InputAction.CallbackContext context);
            void OnBlockPlaceL(InputAction.CallbackContext context);
            void OnSelectChange(InputAction.CallbackContext context);
        }
    }
}
